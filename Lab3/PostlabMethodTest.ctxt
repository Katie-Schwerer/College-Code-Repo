#BlueJ class context
comment0.target=PostlabMethodTest
comment0.text=\r\n\ The\ test\ class\ PostlabMethodTest.\r\n\r\n\ This\ is\ an\ advanced\ class\ used\ to\ unit\ test\ student\ work\ for\ CS\ 1440\ Lab\ 3.\ \ \r\n\ Students\ are\ welcome\ to\ view\ the\ code\ as\ an\ example\ of\ "good"\ code.\ \ At\ a\ \r\n\ "high\ level"\ 1440\ students\ can\ understand\ that\ this\ code\ tests\ the\ code\ they\ \r\n\ are\ writing\ in\ a\ "companion"\ class.\ \ They\ can\ see\ the\ inputs\ going\ into\ a\ \r\n\ test\ and\ the\ results\ expected.\ \ However,\ there\ is\ much\ sophisticated\ stuff\ \r\n\ going\ on\ "under\ the\ hood."\ \ Students\ should\ NOT\ be\ discouraged\ if\ they\ don't\ \r\n\ "get"\ the\ details.\ \ \r\n\r\n\ @author\ \ Jay\ Fenwick\r\n\ @version\ Spring\ 2014\r\n
comment1.params=
comment1.target=PostlabMethodTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ PayStubTest.\r\n
comment10.params=
comment10.target=void\ testSampleData()
comment10.text=\r\n\ Test\ with\ sample\ data.\r\n
comment11.params=
comment11.target=java.lang.String[]\ makeExpectedOutput()
comment11.text=\r\n\ Build\ expected\ output\ array.\r\n\ \r\n\ @return\ String[]\ array\ of\ expeccted\ outpout\r\n
comment12.params=outputString
comment12.target=void\ verifySampleOutput(java.lang.String)
comment12.text=\r\n\ Private\ method\ to\ verify\ student\ output\ when\ given\ sample\ input.\r\n\ \r\n\ @param\ outputString\ is\ the\ student\ program's\ actual\ output\r\n
comment13.params=line
comment13.target=boolean\ lineOfUnderscores(java.lang.String)
comment13.text=\r\n\ Check\ proper\ format\ of\ output\ consisting\ of\ a\ line\ of\ underscores.\r\n\ \r\n\ @param\ line\ is\ the\ line\ to\ check\ \r\n\ @return\ boolean\ value\ indicating\ success\ of\ the\ check\r\n
comment14.params=output\ msg\ expected
comment14.target=void\ checkLine(java.util.Scanner,\ java.lang.String,\ java.lang.String)
comment14.text=\r\n\ Private\ method\ to\ check\ proper\ format\ of\ output\ line.\r\n\ \r\n\ @param\ output\ Scanner\ containing\ next\ line\ to\ check\r\n\ @param\ msg\ is\ a\ pretty\ printing\ message\r\n\ @param\ expected\ is\ the\ expected\ output\r\n
comment15.params=
comment15.target=void\ testCheckStyle()
comment15.text=\r\n\ Entry\ point\ for\ testing\ conformance\ to\ Checkstyle.\r\n
comment16.params=
comment16.target=java.lang.String\ getXmlHeaderConfig()
comment16.text=\r\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\r\n\ \r\n\ @return\ header\ string\ for\ XML\ file\r\n
comment17.params=
comment17.target=java.lang.String\ getMagicNumbersConfig()
comment17.text=\r\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\r\n\ \r\n\ @return\ checkstyle\ module\ definition\ for\ magic\ numbers\r\n
comment18.params=
comment18.target=java.lang.String\ getWhitespacecConfig()
comment18.text=\r\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\r\n\ \r\n\ @return\ checkstyle\ module\ definition\ for\ whitespace\ around\ operators\r\n
comment19.params=
comment19.target=java.lang.String\ getXmlConfig()
comment19.text=\r\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\r\n\ \r\n\ @return\ XML\ configuration\ string\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment4.params=
comment4.target=void\ resetStreams()
comment4.text=\r\n\ Resets\ I/O\ streams.\r\n
comment5.params=
comment5.target=void\ testPostlab()
comment5.text=\r\n\ The\ "entry\ point"\ for\ testing\ activity\ 2.\r\n
comment6.params=
comment6.target=void\ printGrade()
comment6.text=\r\n\ Store\ the\ grade\ then\ print\ the\ report.\r\n
comment7.params=
comment7.target=java.lang.String\ gradeReport()
comment7.text=\r\n\ Creates\ a\ string\ with\ the\ grades\ for\ output.\r\n\ \r\n\ @return\ a\ String\ containing\ the\ grader\ report\r\n
comment8.params=
comment8.target=void\ testPrevious()
comment8.text=\r\n\ Test\ previous\ activities.\r\n
comment9.params=
comment9.target=void\ testSilent()
comment9.text=\r\n\ Silently\ (no\ output)\ tests\ in\ various\ ways\ the\ activity\ 1\ work.\r\n\ Notice\ that\ we\ can\ assign\ partial\ grades\ as\ some\ "subtests"\ work\ using\r\n\ the\ grade\ field.\ \ But\ we\ must\ be\ sure\ to\ printGrade\ before\ failing.\r\n
numComments=20
